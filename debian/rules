#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

#flavours := v3 v3ext nfsroot-v3
flavours := eb600


# This has to be exported to make some magic below work.

.NOTPARALLEL:

export DH_OPTIONS

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKEFLAGS += -j$(NUMJOBS)
endif


include /usr/share/dpatch/dpatch.make

LINUX_VERSION = 2.6.27

build: build-arch build-indep

build-arch: build-arch-stamp
build-arch-stamp:
	for FLAVOUR in $(flavours); do \
		mkdir -p build-$$FLAVOUR-armel; \
		cp $(CURDIR)/debian/config-$$FLAVOUR-armel $(CURDIR)/.config; \
		$(MAKE) EXTRAVERSION=-$$FLAVOUR-$(DEB_HOST_ARCH) ARCH=arm CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)- INSTALL_MOD_PATH=build-$$FLAVOUR-armel/ oldconfig; \
		$(MAKE) EXTRAVERSION=-$$FLAVOUR-$(DEB_HOST_ARCH) ARCH=arm CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)- INSTALL_MOD_PATH=build-$$FLAVOUR-armel/ zImage modules; \
		$(MAKE) EXTRAVERSION=-$$FLAVOUR-$(DEB_HOST_ARCH) ARCH=arm CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)- INSTALL_MOD_PATH=build-$$FLAVOUR-armel/ modules_install; \
		cp $(CURDIR)/arch/arm/boot/zImage $(CURDIR)/.config $(CURDIR)/System.map $(CURDIR)/build-$$FLAVOUR-armel/; \
	done

	touch $@

build-indep:

clean: clean-patched unpatch
clean-patched: patch-stamp
	dh_testdir
	dh_testroot
	rm -rf *-stamp build-*
	$(MAKE) ARCH=arm distclean
	dh_clean 

install: install-indep install-arch
install-indep:
	dh_testdir
	dh_testroot
	dh_clean -k -i 
	dh_installdirs -i
	dh_install -i
	for FLAVOUR in $(flavours); do \
		mkdir -p $(CURDIR)/debian/linux-image-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH)/boot; \
		install -m 0644 $(CURDIR)/build-$$FLAVOUR-armel/zImage $(CURDIR)/debian/linux-image-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH)/boot/vmlinuz-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH); \
		install -m 0644 $(CURDIR)/build-$$FLAVOUR-armel/System.map $(CURDIR)/debian/linux-image-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH)/boot/System.map-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH); \
		install -m 0644 $(CURDIR)/build-$$FLAVOUR-armel/.config $(CURDIR)/debian/linux-image-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH)/boot/config-$(LINUX_VERSION)-$$FLAVOUR-$(DEB_HOST_ARCH); \
	done

install-arch:
	dh_testdir
	dh_testroot
	dh_clean -k -s 
	dh_installdirs -s
	for FLAVOUR in $(flavours); do \
		mkdir -p $(CURDIR)/debian/linux-modules-$(LINUX_VERSION)-$$FLAVOUR/; \
		cp -r $(CURDIR)/build-$$FLAVOUR-armel/lib $(CURDIR)/debian/linux-modules-$(LINUX_VERSION)-$$FLAVOUR/; \
	done
	dh_install -s

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_link
	dh_strip
	dh_compress 
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-indep: build-indep install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

binary-arch: build-arch install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch configure
